library(DESeq2)

count <- read.csv("fragmentmapping.csv")
#fragment.csv was generated by combining peaks_countMatrix.txt to optimize the file format for Deseq2

rownames(count) <- count$Features
count <- count[,2:5]
count <- as.matrix(count)

group <- data.frame(con = factor(c("hTERT", "hTERT", "Primary", "Primary")))

dds <- DESeqDataSetFromMatrix(countData = count, colData = group, design = ~ con)
dds <- DESeq(dds)
res <- results(dds)

test <- as.data.frame(res@listData)
rownames(test) <- res@rownames
test <- subset(test,padj < 0.001)

test2 <- Signac::StringToGRanges(rownames(test),sep = c("-", "-"))

library(ChIPpeakAnno)
library(TxDb.Hsapiens.UCSC.hg38.knownGene)

annoData <- toGRanges(TxDb.Hsapiens.UCSC.hg38.knownGene, feature="gene")

annotatedPeak <- annotatePeakInBatch(test2,
                                     AnnotationData = annoData)

library(org.Hs.eg.db)
annotatedPeak <- addGeneIDs(annotatedPeak, orgAnn="org.Hs.eg.db", IDs2Add="symbol",feature_id_type = "entrez_id")
test3 <- as.data.frame(annotatedPeak@elementMetadata@listData)
test3 <- test3[!duplicated(test3$peak), ]
test$nearest_gene <- test3[["symbol"]]

write.csv(test,"differentialpeaks.csv")

